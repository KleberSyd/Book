@page "/fetchdata"

@using Book.Data
@inject BookServices BookServices

<h3 class="mb-3">Search Results:</h3>
<div class="table-responsive">
    <table class="table table-hover">
        <thead class="thead-dark">
        <tr>
            <th>Book Title</th>
            <th>Publisher</th>
            <th>Authors</th>
            <th>Type</th>
            <th>ISBN</th>
            <th>Category</th>
            <th>Available Copies</th>
        </tr>
        </thead>
        <tbody>
        @if (_books != null)
        {
            foreach (var book in _books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Publisher</td>
                    <td>@book.Authors</td>
                    <td>@book.Type</td>
                    <td>@book.ISBN</td>
                    <td>@book.Category</td>
                    <td>@book.AvailableCopies</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No books found.</td>
            </tr>
        }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public string? SearchValue { get; set; }

    private List<Book>? _books;

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(SearchValue))
        {
            _books = await BookServices.SearchBooksAsync(SearchValue);
        }
    }
}